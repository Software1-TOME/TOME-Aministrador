{"version":3,"sources":["img/admin.png","img/tome.jpg","views/IndexPage.js","img/tome-logo-blanco.png","components/cuentas/admcuentas/tabs/Administradores.js","components/cuentas/admcuentas/tabs/Proveedores.js","components/cuentas/admcuentas/tabs/Solicitantes.js","requirements/MetodosAxios.js","Constants.js","img/icons/eliminar.png","components/cuentas/admcuentas/AdmCuentas.js","components/cuentas/administrador/Administrador.js","components/cuentas/proveedor/funtions.js","img/aceptar.png","img/rechazar.png","components/cuentas/proveedor/Pendientes/Pendientes.js","components/cuentas/proveedor/Proveedores/Proveedores.js","components/cuentas/proveedor/Proveedor.js","components/cuentas/solicitante/Solicitante.js","components/servicios/categorias/Categorias.js","components/servicios/sub-categorias/SubCategoria.js","views/LayoutPage.js","App.js","reportWebVitals.js","index.js"],"names":["IndexPage","props","state","to","className","he","src","admin","alt","class","tome_logo","Component","Administradores","llenarTabla","data","i","push","key","nombres","cedula","correo","check","onChange","switchValue","onChangeCheck","defaultChecked","setState","checked","console","log","onSelectChange","selectedRowKeys","selectedRows","this","rowSelection","type","columns","title","dataIndex","dataSource","Proveedores","loading","loadingTable","data_proveedor","Solicitantes","data_solicitante","MetodosAxios","id","instanceAxios","delete","post","user","get","axios","create","baseURL","obtener_solicitantes","cambio_solicitante_estado","estado","put","obtener_proveedores","obtener_proveedores_pendientes","obtener_cuenta_proveedor","proveedorID","TabPane","Tabs","Search","Input","AdmCuentas","llenarTablaSolicitante","then","res","solicitante","user_datos","apellidos","email","loadingCheck","onChangeCheckSolicitante","length","base_solicitante","llenarTablaProveedor","proveedor","onChangeCheckProveedor","base_proveedor","onSelectChangeSolicitante","selectedRowKeysSolicitante","onSelectChangeProveedor","selectedRowKeysProveedor","onSelectChangeAdministrador","selectedRowKeysAdministrador","searchSolicitante","search","toLowerCase","nombre","searchProveedor","searchUser","eliminar_solicitante","tabBarExtraContent","placeholder","allowClear","onSearch","style","width","margin","shape","size","icon","Icon","component","Eliminar","height","onClick","eliminar","tab","Administrador","getProfesiones","username","a","_profesiones","obtener_profesiones","response","profesiones","_profesion","profesion","getCuenta","id_proveedor","accounts","cuentas","account","element","numero","numero_cuenta","banco","tipo","tipo_cuenta","getProveedor","count","_username","fullName","date","Date","fecha_creacion","fecha","getDate","getMonth","getFullYear","licencia","proveedor_id","user_id","tipo_user","ciudad","telefono","genero","foto","descripcion","document","get_Pendientes","pendiente","pendiente_id","ano_experiencia","Pendientes","handleOk","e","selected","experiencia","register_proveedor","value","datos","success","created","show","creado","password","is_changed","failed","handleCancel","sent","handleSendEmail","enviar_email","msg","pendientes","loading_pendientes","load_Pendientes","prevProps","prevState","_pendiente","docs","documents","desc","variable","onRow","event","showInfoPendiente","visible","onOk","onCancel","footer","ghost","aceptar","rechazar","rowSpan","background","proveedores","Proveedor","loading_proveedores","load_proveedores","marginBottom","Solicitante","Categorias","SubCategoria","Header","Layout","Content","Sider","SubMenu","Menu","LayoutPage","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","justify","align","UserOutlined","theme","mode","defaultSelectedKeys","Item","match","path","padding","paddingLeft","paddingRight","tomeLogoB","color","minHeight","exact","SubCategorias","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f9e5bfa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/admin.85bdf045.png\";","export default __webpack_public_path__ + \"static/media/tome.229c6f40.jpg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport admin from \"../img/admin.png\";\r\nimport tome_logo from \"../img/tome.jpg\"\r\nimport './indexPage.css'\r\nclass IndexPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            < >\r\n                <Link to=\"/inicio\">\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"background\">\r\n                            <img className=\"background-img\" he src={admin} alt=\"Login Meme\" />\r\n                        </div>\r\n                        <div class=\"credentials\">\r\n                            <div className=\"logo-div\">\r\n                                <img src={tome_logo} className=\"logo-login\" alt=\"Logo\" />\r\n                            </div>\r\n                            <div className=\"form\">\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </Link>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;","export default __webpack_public_path__ + \"static/media/tome-logo-blanco.ddbcc4b0.png\";","import React, { Component } from \"react\";\r\nimport { Table, Switch } from 'antd';\r\n\r\nclass Administradores extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            data: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.llenarTabla();\r\n    }\r\n\r\n    llenarTabla = () => {\r\n        //llamar axio y llenar\r\n        let data = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            data.push({\r\n                key: i,\r\n                nombres: `Regatto ${i}`,\r\n                cedula: \"0999999999\",\r\n                correo: `Café@outlook.com`,\r\n                check: <Switch \r\n                            key={i} \r\n                            onChange={(switchValue)=>this.onChangeCheck(i,switchValue)} \r\n                            defaultChecked={false}\r\n                        />,\r\n            });\r\n        }\r\n        this.setState({\r\n            data\r\n        })\r\n    }\r\n\r\n    onChangeCheck=(checked,i) =>{\r\n        console.log(checked,i);\r\n      }\r\n      \r\n    onSelectChange = (selectedRowKeys, selectedRows) => {\r\n        console.log('Rows: ', selectedRows);\r\n        console.log('Keys:', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n    render() {\r\n        return (\r\n            < >\r\n            <div>\r\n                <Table\r\n                    rowSelection={{\r\n                        type: \"checkbox\",\r\n                        onChange: this.onSelectChange\r\n                    }}\r\n                    columns={[\r\n                        {\r\n                            title: 'Nombres',\r\n                            dataIndex: 'nombres',\r\n                        },\r\n                        {\r\n                            title: 'Cédula',\r\n                            dataIndex: 'cedula',\r\n                        },\r\n                        {\r\n                            title: 'Correo electrónico',\r\n                            dataIndex: 'correo',\r\n                        },\r\n                        {\r\n                            title: 'Habilitar/inhabiliar',\r\n                            dataIndex: 'check',\r\n                        },\r\n                    ]}\r\n                    dataSource={this.state.data} />\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Administradores;","import React, { Component } from \"react\";\r\nimport { Table, Switch } from 'antd';\r\n\r\nclass Proveedores extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            data: [],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < >\r\n                <div>\r\n                    <Table\r\n                        loading={this.props.loadingTable}\r\n                        rowSelection={{\r\n                            type: \"checkbox\",\r\n                            onChange: this.props.onSelectChange\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: 'Nombres',\r\n                                dataIndex: 'nombres',\r\n                            },\r\n                            {\r\n                                title: 'Cédula',\r\n                                dataIndex: 'cedula',\r\n                            },\r\n                            {\r\n                                title: 'Correo electrónico',\r\n                                dataIndex: 'correo',\r\n                            },\r\n                            {\r\n                                title: 'Habilitar/inhabiliar',\r\n                                dataIndex: 'check',\r\n                            },\r\n                        ]}\r\n                        dataSource={this.props.data_proveedor} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Proveedores;","import React, { Component } from \"react\";\r\nimport { Table } from 'antd';\r\nclass Solicitantes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data_solicitante: [],\r\n            loadingTable: false,\r\n        };\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            < >\r\n                <div>\r\n                    <Table\r\n                        loading={this.props.loadingTable}\r\n                        rowSelection={{\r\n                            type: \"checkbox\",\r\n                            onChange: this.props.onSelectChange\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: 'Nombres',\r\n                                dataIndex: 'nombres',\r\n                            },\r\n                            {\r\n                                title: 'Cédula',\r\n                                dataIndex: 'cedula',\r\n                            },\r\n                            {\r\n                                title: 'Correo electrónico',\r\n                                dataIndex: 'correo',\r\n                            },\r\n                            {\r\n                                title: 'Habilitar/inhabiliar',\r\n                                dataIndex: 'check',\r\n                            },\r\n                        ]}\r\n                        dataSource={this.props.data_solicitante} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Solicitantes;","import axios from \"axios\";\r\nimport {API_URL} from \"../Constants\";\r\n\r\nexport default class MetodosAxios {\r\n  static instanceAxios = axios.create({\r\n   baseURL: API_URL,\r\n  });\r\n\r\n  /*\r\n    obtener_solicitantes\r\n    autor: Axell\r\n    descripccion: Obtiene todos los solicitantes\r\n    parametros: None\r\n  */\r\n  static obtener_solicitantes = () => {\r\n    return MetodosAxios.instanceAxios.get(\"/solicitantes/\")\r\n  };\r\n  /*\r\n    cambio_solicitante_estado\r\n    autor: Axell\r\n    descripccion: Cambia estado de un solicitante\r\n    parametros: boolean estado, int id\r\n  */\r\n  static cambio_solicitante_estado = (estado,id) => {\r\n    console.log(estado,id)\r\n    return MetodosAxios.instanceAxios.put(`/solicitante_estado/${id}`,estado)\r\n  };\r\n  /*\r\n    eliminar_solicitante\r\n    autor: Axell\r\n    descripccion: Elimina un solicitante\r\n    parametros: int id\r\n  */\r\n  static eliminar_solicitante(id){\r\n    return MetodosAxios.instanceAxios.delete(`/solicitante_delete/${id}`)\r\n  };\r\n\r\n  static obtener_proveedores=()=>{\r\n    return MetodosAxios.instanceAxios.get(\"/proveedores/\")\r\n  }\r\n\r\n  static obtener_proveedores_pendientes=()=>{\r\n    return MetodosAxios.instanceAxios.get(\"/proveedores_pendientes/\")\r\n  }\r\n\r\n  static obtener_cuenta_proveedor=(proveedorID)=>{\r\n    return MetodosAxios.instanceAxios.get(`/cuenta_proveedor/${proveedorID}`)\r\n  }\r\n\r\n  static register_proveedor(data){\r\n    let url = '/register_proveedor/'\r\n    return MetodosAxios.instanceAxios.post(url, data)\r\n  }\r\n\r\n  static obtener_profesiones(user){\r\n    return MetodosAxios.instanceAxios.get(`/proveedor_profesiones/${user}`)\r\n  }\r\n\r\n  static enviar_email(data){\r\n    return MetodosAxios.instanceAxios.post('/email/', data)\r\n  }\r\n\r\n}\r\n","export const API_URL = `https://tomesoft1.pythonanywhere.com`;\r\n","export default __webpack_public_path__ + \"static/media/eliminar.17c06392.png\";","import React, { Component } from \"react\";\r\nimport { Tabs, Switch, Input, Button } from 'antd';\r\nimport Administradores from \"./tabs/Administradores\";\r\nimport Proveedores from \"./tabs/Proveedores\";\r\nimport Solicitantes from \"./tabs/Solicitantes\";\r\nimport MetodosAxios from \"../../../requirements/MetodosAxios\";\r\nimport Eliminar from \"../../../img/icons/eliminar.png\";\r\nimport Icon from '@ant-design/icons';\r\nimport \"./AdmCuentas.css\"\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\nclass AdmCuentas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedRowKeysSolicitante: [],\r\n            selectedRowKeysProveedor: [],\r\n            selectedRowKeysAdministrador: [],\r\n            base_solicitante: [],\r\n            data_solicitante: [],\r\n            base_proveedor: [],\r\n            data_proveedor: [],\r\n            loadingTable: false,\r\n            loadingCheck: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.llenarTablaSolicitante();\r\n        this.llenarTablaProveedor();\r\n    }\r\n\r\n    llenarTablaSolicitante = () => {\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        MetodosAxios.obtener_solicitantes().then(res => {\r\n            let data_solicitante = [];\r\n            for (let i = 0; i < res.data.length; i++) {\r\n                let solicitante = res.data[i]\r\n                data_solicitante.push({\r\n                    key: solicitante.id,\r\n                    nombres: solicitante.user_datos.nombres + \" \" + solicitante.user_datos.apellidos,\r\n                    cedula: solicitante.user_datos.cedula,\r\n                    correo: solicitante.user_datos.user.email,\r\n                    check: <Switch\r\n                        key={solicitante.id}\r\n                        loading={this.state.loadingCheck}\r\n                        onChange={(switchValue) => this.onChangeCheckSolicitante(solicitante.id, switchValue)}\r\n                        defaultChecked={solicitante.estado}\r\n                    />,\r\n                });\r\n            }\r\n            this.setState({\r\n                data_solicitante: data_solicitante,\r\n                base_solicitante: data_solicitante,\r\n                loadingTable: false\r\n            })\r\n        })\r\n    }\r\n\r\n    llenarTablaProveedor = () => {\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        MetodosAxios.obtener_proveedores().then(res => {\r\n            let data_proveedor = [];\r\n            for (let i = 0; i < res.data.length; i++) {\r\n                let proveedor = res.data[i]\r\n                data_proveedor.push({\r\n                    key: proveedor.id,\r\n                    nombres: proveedor.user_datos.nombres + \" \" + proveedor.user_datos.apellidos,\r\n                    cedula: proveedor.user_datos.cedula,\r\n                    correo: proveedor.user_datos.user.email,\r\n                    check: <Switch\r\n                        key={proveedor.id}\r\n                        loading={this.state.loadingCheck}\r\n                        onChange={(switchValue) => this.onChangeCheckProveedor(proveedor.id, switchValue)}\r\n                        defaultChecked={proveedor.estado}\r\n                    />,\r\n                });\r\n            }\r\n            this.setState({\r\n                data_proveedor: data_proveedor,\r\n                base_proveedor: data_proveedor,\r\n                loadingTable: false\r\n            })\r\n        })\r\n    }\r\n\r\n    async onChangeCheckSolicitante(i, checked){\r\n        this.setState({\r\n            loadingCheck: true\r\n        })\r\n        await MetodosAxios.cambio_solicitante_estado({ 'estado': checked }, i).then(res => {\r\n            console.log(res)\r\n        })\r\n        this.setState({\r\n            loadingCheck: false\r\n        })\r\n\r\n    }\r\n\r\n    onChangeCheckProveedor = (i, checked) => {\r\n        this.setState({\r\n            loadingCheck: true\r\n        })\r\n        /*MetodosAxios.cambio_solicitante_estado({ 'estado': checked }, i).then(res => {\r\n            console.log(res)\r\n        })*/\r\n        this.setState({\r\n            loadingCheck: false\r\n        })\r\n\r\n    }\r\n\r\n    onSelectChangeSolicitante = (selectedRowKeys, selectedRows) => {\r\n        console.log('Rows: ', selectedRows);\r\n        console.log('Keys:', selectedRowKeys);\r\n        this.setState({ selectedRowKeysSolicitante: selectedRowKeys });\r\n    };\r\n\r\n    onSelectChangeProveedor = (selectedRowKeys, selectedRows) => {\r\n        console.log('Rows: ', selectedRows);\r\n        console.log('Keys:', selectedRowKeys);\r\n        this.setState({ selectedRowKeysProveedor: selectedRowKeys });\r\n    };\r\n\r\n    onSelectChangeAdministrador = (selectedRowKeys, selectedRows) => {\r\n        console.log('Rows: ', selectedRows);\r\n        console.log('Keys:', selectedRowKeys);\r\n        this.setState({ selectedRowKeysAdministrador: selectedRowKeys });\r\n    };\r\n\r\n    searchSolicitante = (search) => {\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        let data_solicitante\r\n        if (search !== \"\") {\r\n            data_solicitante = [];\r\n            for (let i = 0; i < this.state.base_solicitante.length; i++) {\r\n                let solicitante = this.state.base_solicitante[i];\r\n                search = search.toLowerCase();\r\n                let nombre = solicitante.nombres.toLowerCase();\r\n                let cedula = solicitante.cedula.toLowerCase();\r\n                let correo = solicitante.correo.toLowerCase();\r\n                if (nombre.search(search) !== -1 || cedula.search(search) !== -1 || correo.search(search) !== -1) {\r\n                    data_solicitante.push(solicitante);\r\n                }\r\n            }\r\n        } else {\r\n            data_solicitante = this.state.base_solicitante;\r\n        }\r\n        this.setState({\r\n            data_solicitante: data_solicitante,\r\n            loadingTable: false\r\n        })\r\n    }\r\n\r\n    searchProveedor = (search) => {\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        let data_proveedor\r\n        if (search !== \"\") {\r\n            data_proveedor = [];\r\n            for (let i = 0; i < this.state.base_proveedor.length; i++) {\r\n                let proveedor = this.state.base_proveedor[i];\r\n                search = search.toLowerCase();\r\n                let nombre = proveedor.nombres.toLowerCase();\r\n                let cedula = proveedor.cedula.toLowerCase();\r\n                let correo = proveedor.correo.toLowerCase();\r\n                if (nombre.search(search) !== -1 || cedula.search(search) !== -1 || correo.search(search) !== -1) {\r\n                    data_proveedor.push(proveedor);\r\n                }\r\n            }\r\n        } else {\r\n            data_proveedor = this.state.base_proveedor;\r\n        }\r\n        this.setState({\r\n            data_proveedor: data_proveedor,\r\n            loadingTable: false\r\n        })\r\n    }\r\n\r\n    searchUser = (search) => {\r\n        console.log(search);\r\n        this.searchSolicitante(search);\r\n        this.searchProveedor(search);\r\n    }\r\n\r\n    async eliminar() {\r\n        console.log(\"eliminar\", this.state.selectedRowKeysSolicitante)\r\n        if (this.state.selectedRowKeysSolicitante.length > 0) {\r\n            for (let i = 0; i < this.state.selectedRowKeysSolicitante.length; i++) {\r\n                let id = this.state.selectedRowKeysSolicitante[i];\r\n                await MetodosAxios.eliminar_solicitante(id).then(res => {\r\n                    console.log(res)\r\n                })\r\n            }\r\n        }\r\n        if (this.state.selectedRowKeysProveedor.length > 0) {\r\n            for (let i = 0; i < this.state.selectedRowKeysProveedor.length; i++) {\r\n                let id = this.state.selectedRowKeysProveedor[i];\r\n                /*await MetodosAxios.eliminar_solicitante(id).then(res => {\r\n                    console.log(res)\r\n                })*/\r\n            }\r\n        }\r\n        if (this.state.selectedRowKeysAdministrador.length > 0) {\r\n            for (let i = 0; i < this.state.selectedRowKeysAdministrador.length; i++) {\r\n                let id = this.state.selectedRowKeysAdministrador[i];\r\n                /*await MetodosAxios.eliminar_solicitante(id).then(res => {\r\n                    console.log(res)\r\n                })*/\r\n            }\r\n        }\r\n        this.llenarTablaSolicitante();\r\n        this.llenarTablaProveedor();\r\n        //this.llenarTablaAdministrador();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            < >\r\n                <h1 className=\"titulo\">Habilitar/inhabilitar cuentas</h1>\r\n\r\n\r\n                <div className=\"card-container\">\r\n                    <Tabs tabBarExtraContent={<div>\r\n                        <Search\r\n                            placeholder=\"Buscar\"\r\n                            allowClear\r\n                            onSearch={this.searchUser}\r\n                            style={{ width: 200, margin: '0 10px' }}\r\n                        />\r\n                        <Button\r\n                            type=\"text\"\r\n                            shape=\"circle\"\r\n                            size=\"small\"\r\n                            icon={<Icon component={() => (<img alt=\"icono eliminar\" src={Eliminar} height=\"auto\" width=\"12px\" />)} />}\r\n                            onClick={() => { this.eliminar() }}\r\n                        />\r\n                    </div>}\r\n                        type=\"card\" size=\"large\" >\r\n                        <TabPane tab=\"SOLICITANTES\" key=\"1\">\r\n                            <Solicitantes\r\n                                onSelectChange={this.onSelectChangeSolicitante}\r\n                                data_solicitante={this.state.data_solicitante}\r\n                                loadingTable={this.state.loadingTable}\r\n                            />\r\n                        </TabPane>\r\n                        <TabPane tab=\"PROVEEDORES\" key=\"2\">\r\n                            <Proveedores\r\n                                onSelectChange={this.onSelectChangeProveedor}\r\n                                data_proveedor={this.state.data_proveedor}\r\n                                loadingTable={this.state.loadingTable}\r\n                            />\r\n                        </TabPane>\r\n                        <TabPane tab=\"ADMINISTRADORES\" key=\"3\">\r\n                            <Administradores\r\n                                onSelectChange={this.onSelectChangeAdministrador}\r\n                            />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdmCuentas;","import React, { Component } from \"react\";\r\n\r\n\r\nclass Administrador extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            < >\r\n                <h1>Pagina de Administrador</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Administrador;","import MetodosAxios from \"../../../requirements/MetodosAxios\";\r\n\r\nexport async function getProfesiones(username) {\r\n    let _profesiones = \"\"\r\n    let response = await MetodosAxios.obtener_profesiones(username)\r\n    let profesiones = response.data\r\n    for (let i = 0; i < profesiones.length; i++) {\r\n        let _profesion = profesiones[i].profesion.nombre\r\n        if (i === (profesiones.length - 1)) _profesiones += _profesion;\r\n        else _profesiones += _profesion + \" , \"\r\n    }\r\n    console.log(_profesiones)\r\n    return _profesiones;\r\n}\r\n\r\nexport async function getCuenta(id_proveedor){\r\n    let accounts =[]\r\n    let response = await MetodosAxios.obtener_cuenta_proveedor(id_proveedor);\r\n    let cuentas = response.data\r\n    if(cuentas.length>0){\r\n        for(let account of cuentas){\r\n            let element={\r\n                id: account.id,\r\n                numero: account.numero_cuenta,\r\n                banco: account.banco.nombre,\r\n                tipo: account.tipo_cuenta.nombre,\r\n                estado: account.estado\r\n            }\r\n            accounts.push(element)\r\n        }\r\n    }\r\n    return accounts;\r\n}\r\n\r\nexport async function  getProveedor(proveedor, count) {\r\n    let _username = proveedor.user_datos.user.email;\r\n    let fullName = proveedor.user_datos.nombres + \" \" + proveedor.user_datos.apellidos;\r\n    let date = new Date(proveedor.user_datos.fecha_creacion)\r\n    let fecha = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear()\r\n    let licencia = \"No\"\r\n    proveedor.estado ? licencia = \"Sí\" : licencia = \"No\"\r\n    let profesion = await getProfesiones(_username);\r\n    let accounts = await getCuenta(proveedor.id)\r\n    let element = {\r\n        count: count,\r\n        key: proveedor.id,\r\n        proveedor_id: proveedor.id,\r\n        user_datos: proveedor.user_datos.id,\r\n        user_id: proveedor.user_datos.user.id,\r\n        username: proveedor.user_datos.user.username,\r\n        email: proveedor.user_datos.user.email,\r\n        tipo_user: proveedor.user_datos.tipo,\r\n        nombre: fullName,\r\n        ciudad: proveedor.user_datos.ciudad,\r\n        cedula: proveedor.user_datos.cedula,\r\n        telefono: proveedor.user_datos.telefono,\r\n        genero: proveedor.user_datos.genero,\r\n        foto: proveedor.user_datos.foto,\r\n        descripcion: proveedor.descripcion,\r\n        document: proveedor.document,\r\n        estado: licencia,\r\n        fecha_creacion: fecha,\r\n        profesion: profesion,\r\n        cuentas: accounts,\r\n\r\n    }\r\n    return element;\r\n}\r\n\r\n\r\n\r\nexport async function get_Pendientes(pendiente, count){\r\n    let proveedor = pendiente.proveedor\r\n    let fullName = proveedor.user_datos.nombres + \" \" + proveedor.user_datos.apellidos;\r\n    let date = new Date(proveedor.user_datos.fecha_creacion)\r\n    let fecha = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear()\r\n    let licencia = \"No\"\r\n    proveedor.estado ? licencia = \"Sí\" : licencia = \"No\"\r\n    let accounts = await getCuenta(proveedor.id)\r\n    let element={\r\n        count: count,\r\n        key: proveedor.id,\r\n        proveedor_id: proveedor.id,\r\n        pendiente_id: pendiente.id,\r\n        user_datos: proveedor.user_datos.id,\r\n        email: pendiente.email,\r\n        tipo_user: proveedor.user_datos.tipo,\r\n        nombre: fullName,\r\n        ciudad: proveedor.user_datos.ciudad,\r\n        cedula: proveedor.user_datos.cedula,\r\n        telefono: proveedor.user_datos.telefono,\r\n        genero: proveedor.user_datos.genero,\r\n        foto: proveedor.user_datos.foto,\r\n        descripcion: proveedor.descripcion,\r\n        document: proveedor.document,\r\n        estado: licencia,\r\n        fecha_creacion: fecha,\r\n        profesion: pendiente.profesion,\r\n        ano_experiencia: pendiente.ano_experiencia,\r\n        cuentas: accounts,\r\n    }\r\n    return element\r\n}\r\n","export default __webpack_public_path__ + \"static/media/aceptar.68dced2a.png\";","export default __webpack_public_path__ + \"static/media/rechazar.0c30c094.png\";","import React, { Component } from \"react\";\r\nimport { Table, Switch, Modal, Button } from 'antd';\r\nimport MetodosAxios from \"../../../../requirements/MetodosAxios\"\r\nimport { get_Pendientes } from '../funtions';\r\nimport aceptar from '../../../../img/aceptar.png'\r\nimport rechazar from '../../../../img/rechazar.png'\r\nimport style from './pendientes.css'\r\n\r\n\r\n\r\n\r\nconst columns = [\r\n    { title: '', dataIndex: 'count', className: 'columns-pendientes-1' },\r\n    { title: 'Nombre', dataIndex: 'nombre', className: 'columns-pendientes' },\r\n    { title: 'Profesión', dataIndex: 'profesion', className: 'columns-pendientes' },\r\n    { title: 'Correo Electrónico', dataIndex: 'email', className: 'columns-pendientes' },\r\n    { title: 'Fecha de registro', dataIndex: 'fecha_creacion', className: 'columns-pendientes' },];\r\n\r\nclass Pendientes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pendientes: [],\r\n            loading_pendientes: false,\r\n            selected: {},\r\n            created: false,\r\n            failed: false,\r\n            show: false,\r\n            sent: false,\r\n            creado: {},\r\n            success: false,\r\n            msg: \"\",\r\n            is_changed: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_Pendientes()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.state.is_changed!== prevState.is_changed){\r\n            if(this.state.is_changed){\r\n                this.load_Pendientes().then(value=>{\r\n                    console.log(value)\r\n                })\r\n                this.setState({is_changed:false})   \r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n\r\n    async load_Pendientes() {\r\n        this.setState({loading_pendientes: true})\r\n        let pendientes = []\r\n        let value = await MetodosAxios.obtener_proveedores_pendientes();\r\n        let count = 1;\r\n        for (let pendiente of value.data) {\r\n            let _pendiente = await get_Pendientes(pendiente, count)\r\n            pendientes.push(_pendiente);\r\n            count++;\r\n        }\r\n\r\n        this.setState({\r\n            pendientes: pendientes,\r\n            loading_pendientes: false,\r\n        })\r\n\r\n        return value.data;\r\n    }\r\n\r\n    showInfoPendiente(user) {\r\n        this.setState({ selected: user })\r\n        this.setState({ show: true })\r\n        console.log(this.state.selected)\r\n    };\r\n\r\n    handleOk = (e) => {\r\n        try {\r\n            let data = {\r\n                tipo: 'Proveedor',\r\n                email: this.state.selected.email,\r\n                user_datos: this.state.selected.user_datos,\r\n                proveedor: this.state.selected.proveedor_id,\r\n                pendiente: this.state.selected.pendiente_id,\r\n                profesion: this.state.selected.profesion,\r\n                experiencia: this.state.selected.ano_experiencia,\r\n            }\r\n            MetodosAxios.register_proveedor(data).then(value => {\r\n                let datos = value.data;\r\n                if (datos.success) {\r\n                    this.setState({ created: true, show: false })\r\n                    let creado = {\r\n                        password: datos.password,\r\n                        email: datos.username\r\n                    }\r\n                    this.setState({ creado: creado, is_changed:true })\r\n                } else {\r\n                    this.setState({ failed: true, show: false })\r\n                }\r\n            })\r\n        } catch (e) {\r\n            this.setState({ failed: true, show: false })\r\n        }\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            show: false,\r\n            created: false,\r\n            failed: false,\r\n            sent: false,\r\n        });\r\n    };\r\n\r\n    handleSendEmail = (e) => {\r\n        console.log(this.state.creado)\r\n        try {\r\n            MetodosAxios.enviar_email(this.state.creado).then(value => {\r\n                let data = value.data;\r\n                this.setState({ created: false })\r\n                if (data.success) {\r\n                    this.setState({ msg: \"El email ha sido enviado!\" })\r\n                } else {\r\n                    this.setState({ msg: \"No se pudo enviar el correo\" })\r\n                }\r\n                this.setState({ sent: true })\r\n            })\r\n        } catch (e) {\r\n            this.setState({ msg: \"No se pudo enviar el correo\", sent: true })\r\n        }\r\n\r\n    }\r\n\r\n    getDocuments() {\r\n        if (this.state.selected.document) {\r\n            let docs = \" \"\r\n            let documents = this.state.selected.document;\r\n            for (let doc of documents) {\r\n                let desc = doc.descripcion\r\n                if (!desc) {\r\n                    docs += desc + \"\\n\"\r\n                }\r\n            }\r\n            if (docs === \" \") {\r\n                return \"No hay documentos para presentar\"\r\n            } else {\r\n                return docs;\r\n            }\r\n        }\r\n    }\r\n\r\n    getCuenta(user, variable) {\r\n        if (!user) return \"\"\r\n        if (!user.cuentas) return \"\"\r\n        if (user.cuentas.length > 0) return user.cuentas[0][variable]\r\n        else return \" \"\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-pendientes\">\r\n\r\n                <Table onRow={(pendiente) => {\r\n                    return {\r\n                        onClick: event => {\r\n                            this.showInfoPendiente(pendiente)\r\n                        }\r\n                    }\r\n                }}\r\n                    loading={this.state.loading_pendientes}\r\n                    columns={columns} dataSource={this.state.pendientes} >\r\n\r\n                </Table>\r\n\r\n                <Modal\r\n                    visible={this.state.show}\r\n                    onOk={this.handleOk}\r\n                    width={720}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <div className=\"footer\">\r\n                            <Button key=\"accept\" onClick={this.handleOk} className=\"button-modal\" ghost={true}>\r\n                                <img className=\"icon\" src={aceptar}></img>\r\n                            </Button>\r\n                            <Button key=\"cancel\" onClick={this.handleCancel} ghost={true}>\r\n                                <img className=\"icon\" src={rechazar} />\r\n                            </Button>\r\n                        </div>\r\n\r\n                    ]}\r\n                >\r\n                    <div className=\"modal-container\">\r\n                        <h3 className=\"title\">Perfil de proveedor pendiente</h3>\r\n                        <div>\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Nombre</th>\r\n                                        <th className=\"column-data\">{this.state.selected.nombre}</th>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Teléfono</th>\r\n                                        <th className=\"column-data\">{this.state.selected.telefono}</th>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Correo Electrónico</th>\r\n                                        <th className=\"column-data\">{this.state.selected.email}</th>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <td className=\"column-name-3\" rowSpan=\"3\">Cuenta Bancaria</td>\r\n                                        <td className=\"column-data\">{this.getCuenta(this.state.selected, \"tipo\")} </td>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <td className=\"column-data-3\">{this.getCuenta(this.state.selected, \"numero\")}</td>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <td className=\"column-data\">\r\n                                            {this.getCuenta(this.state.selected, \"banco\")}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Licencia</th>\r\n                                        <th className=\"column-data\">{this.state.selected.estado}</th>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Profesión</th>\r\n                                        <th className=\"column-data\">{this.state.selected.profesion}</th>\r\n                                    </tr>\r\n                                    <tr className=\"row\">\r\n                                        <th className=\"column-name\">Documentación</th>\r\n                                        <th className=\"column-data\">No hay documentos por mostrar</th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Modal>\r\n\r\n                <Modal\r\n                    visible={this.state.created}\r\n                    width={520}\r\n                    footer={[\r\n                        <div className=\"footer\">\r\n                            <Button key=\"accept\" onClick={this.handleSendEmail} className=\"button-request\"\r\n                                style={{ background: '##052434' }} size=\"large\">\r\n                                Aceptar\r\n                            </Button>\r\n                        </div>\r\n                    ]}>\r\n                    <div className=\"msg-container\">\r\n                        <div className=\"success-msg\">\r\n                            <h3 className=\"msg-text\">El usuario se ha creado con éxito</h3>\r\n                        </div>\r\n                        <div className=\"detail\">\r\n                            <h3 className=\"msg-detail\">Se enviará el correo al proveedor con sus credenciales</h3>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    visible={this.state.failed}\r\n                    width={350}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <div className=\"footer\">\r\n                            <Button key=\"accept\" onClick={this.handleCancel} className=\"button-request\">\r\n                                Aceptar\r\n                            </Button>\r\n                        </div>\r\n                    ]}>\r\n                    <div className=\"msg-container\">\r\n                        <h3 className=\"msg-text\">No se pudo crear el usuario</h3>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    visible={this.state.sent}\r\n                    width={350}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <div className=\"footer\">\r\n                            <Button key=\"accept\" onClick={this.handleCancel} className=\"button-request\">\r\n                                Aceptar\r\n                            </Button>\r\n                        </div>\r\n                    ]}>\r\n                    <div className=\"msg-container\">\r\n                        <h3 className=\"msg-text\">{this.state.msg}</h3>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Pendientes;","import React, { Component } from \"react\";\r\nimport { Table, Switch } from 'antd';\r\nimport MetodosAxios from \"../../../../requirements/MetodosAxios\"\r\nimport { getProveedor } from '../funtions'\r\n\r\n\r\nconst columns = [\r\n    {title:'', dataIndex: 'count', className: 'columns-pendientes-1'},\r\n    { title: 'Nombre', dataIndex: 'nombre',className: 'columns-pendientes' },\r\n    { title: 'Profesión', dataIndex: 'profesion', className: 'columns-pendientes' },\r\n    { title: 'Correo Electrónico', dataIndex: 'email', className: 'columns-pendientes'},\r\n    { title: 'Licencia', dataIndex: 'estado', className: 'columns-pendientes'},\r\n    { title: 'Fecha de registro', dataIndex: 'fecha_creacion',className: 'columns-pendientes' },];\r\n\r\nclass Proveedores extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Table  columns={columns}\r\n                loading={this.props.loading} \r\n                dataSource={this.props.proveedores} />\r\n           \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Proveedores;","import React, { Component,} from \"react\";\r\nimport { Input, Tabs } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport MetodosAxios from \"../../../requirements/MetodosAxios\";\r\nimport { get_Pendientes, getProveedor } from './funtions';\r\nimport Pendientes from \"./Pendientes/Pendientes\";\r\nimport './Proveedor.css'\r\nimport Proveedores from \"./Proveedores/Proveedores\";\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\n\r\n\r\nclass Proveedor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loading_proveedores:false,\r\n            proveedores: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_proveedores();\r\n    }\r\n\r\n\r\n    async load_proveedores() {\r\n        this.setState({loading_proveedores: true})\r\n        let proveedores = []\r\n        let value = await MetodosAxios.obtener_proveedores();\r\n        let data = value.data\r\n        let count =1;\r\n        for (let proveedor of data) {\r\n            let element = await getProveedor(proveedor, count)\r\n            proveedores.push(element)\r\n            count++;\r\n        }\r\n        this.setState({ proveedores: proveedores, loading_proveedores:false })\r\n        console.log(proveedores)\r\n    }\r\n\r\n\r\n    onSearch = value => {\r\n        console.log(value)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            < >\r\n                <h1 className=\"proveedor-title\">Proveedor</h1>\r\n                <div>\r\n                    <div  className=\"search-div\">\r\n                        <Search\r\n                            placeholder=\"Buscar\"\r\n                            allowClear\r\n                            onSearch={this.onSearch}\r\n                            style={{ width: 200, margin: '0 10px'}}\r\n                            className=\"search-p\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginBottom: 16 }}>\r\n\r\n                    </div>\r\n                    <div className=\"card-container\">\r\n                        <Tabs type=\"card\" size=\"large\">\r\n                            <TabPane tab=\"Proveedores\" key=\"1\" >\r\n                                <Proveedores \r\n                                proveedores={this.state.proveedores}\r\n                                loading={this.state.loading_proveedores}/>\r\n                            </TabPane>\r\n                            <TabPane tab=\"Pendientes\" key=\"2\">\r\n                                <Pendientes/>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Proveedor;","import React, { Component } from \"react\";\r\n\r\nclass Solicitante extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            < >\r\n                <h1>Pagina de Solicitante</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Solicitante;","import React, { Component } from \"react\";\r\n\r\n\r\nclass Categorias extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            < >\r\n                <h1>Pagina de Categorias</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Categorias;","import React, { Component } from \"react\";\r\n\r\n\r\nclass SubCategoria extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            < >\r\n                <h1>Pagina de SubCategoria</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubCategoria;","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Avatar, Row, Col } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport tomeLogoB from \"../img/tome-logo-blanco.png\";\r\nimport AdmCuentas from \"../components/cuentas/admcuentas/AdmCuentas\";\r\nimport Administrador from \"../components/cuentas/administrador/Administrador\";\r\nimport Proveedor from \"../components/cuentas/proveedor/Proveedor\";\r\nimport Solicitante from \"../components/cuentas/solicitante/Solicitante\";\r\nimport Categorias from \"../components/servicios/categorias/Categorias\";\r\nimport SubCategorias from \"../components/servicios/sub-categorias/SubCategoria\";\r\nimport \"./LayoutPage.css\";\r\nconst { Header, Content, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nclass LayoutPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    width=\"300\"\r\n                    className=\"menuLateral\"\r\n                    breakpoint=\"lg\"\r\n                    collapsedWidth=\"0\"\r\n                    onBreakpoint={broken => {\r\n                        console.log(broken);\r\n                    }}\r\n                    onCollapse={(collapsed, type) => {\r\n                        console.log(collapsed, type);\r\n                    }}\r\n                >\r\n                    <Row className=\"logo\" justify=\"center\" align=\"middle\">\r\n                        <Col>\r\n                            <Avatar size={75} icon={<UserOutlined />} />\r\n                            <p className=\"textoCorreoLogo\">axell@piogram.com</p>\r\n                            <p className=\"textoLogo\">Lorem Ipsum</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['4']}>\r\n                        <SubMenu key=\"sub1\" title=\"CUENTAS\">\r\n                            <Menu.Item key=\"1\">\r\n                                Habilitar/inhabilitar cuentas\r\n                                <Link to={`${this.props.match.path}/administrar-cuentas/`} />\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                Proveedor\r\n                                <Link to={`${this.props.match.path}/proveedor/`} />\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"3\">\r\n                                Solicitante\r\n                                <Link to={`${this.props.match.path}/solicitante/`} />\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"4\">\r\n                                Administrador\r\n                                <Link to={`${this.props.match.path}/administrador/`} />\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" title=\"SERVICIOS\">\r\n                            <Menu.Item key=\"5\">\r\n                                Categorías\r\n                                <Link to={`${this.props.match.path}/categorias/`} />\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"6\">\r\n                                Sub-categorías\r\n                                <Link to={`${this.props.match.path}/sub-categorias/`} />\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub3\" title=\"PAGOS\">\r\n                            <Menu.Item key=\"7\">Categorías</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub4\" title=\"PUBLICIDAD\">\r\n                            <Menu.Item key=\"8\">Categorías</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub5\" title=\"PROMOCIÓN\">\r\n                            <Menu.Item key=\"9\">Categorías</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub6\" title=\"POLÍTICAS\">\r\n                            <Menu.Item key=\"10\">Categorías</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub7\" title=\"SUGERENCIAS\">\r\n                            <Menu.Item key=\"11\">Categorías</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}>\r\n                        <Row justify=\"space-between\" align=\"middle\" style={{ height: \"100%\", width: \"100%\", paddingLeft: \"3%\", paddingRight: \"3%\" }}>\r\n                            <Col>\r\n                                <Link to={`${this.props.match.path}/`}>\r\n                                    <img height=\"80px\" width=\"auto\" src={tomeLogoB} alt=\"Logo TOME\" />\r\n                                </Link>\r\n                            </Col>\r\n                            <Col>\r\n                                <Link to={`/`} style={{color:\"white\"}}>\r\n                                    Cerrar Sesión\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Content >\r\n                        <div className=\"site-layout-background\" style={{ padding: 50, minHeight: \"100%\" }}>\r\n                            <Switch>\r\n                                <Route path={`${this.props.match.path}/administrar-cuentas/`} component={AdmCuentas} exact />\r\n                                <Route path={`${this.props.match.path}/proveedor/`} component={Proveedor} exact />\r\n                                <Route path={`${this.props.match.path}/solicitante/`} component={Solicitante} exact />\r\n                                <Route path={`${this.props.match.path}/administrador/`} component={Administrador} exact />\r\n                                <Route path={`${this.props.match.path}/categorias/`} component={Categorias} exact />\r\n                                <Route path={`${this.props.match.path}/sub-categorias/`} component={SubCategorias} exact />\r\n                            </Switch>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LayoutPage;","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\nimport IndexPage from \"./views/IndexPage\";\r\nimport LayoutPage from \"./views/LayoutPage\";\r\nimport 'antd/dist/antd.css'\r\nimport './App.css';\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={IndexPage} exact />\r\n        <Route path=\"/inicio\" component={LayoutPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}